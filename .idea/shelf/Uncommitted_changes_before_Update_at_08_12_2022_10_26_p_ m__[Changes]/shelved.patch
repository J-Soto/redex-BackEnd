Index: src/main/java/pucp/dp1/redex/router/algorithms/AStar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pucp.dp1.redex.router.algorithms;\r\nimport java.sql.Time;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.Duration;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalDateTime;\r\nimport java.time.LocalTime;\r\nimport java.time.ZoneId;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.*;\r\nimport java.util.Map.Entry;\r\nimport java.util.stream.Collectors;\r\nimport javax.print.attribute.standard.Destination;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\nimport javafx.util.Pair;\r\nimport pucp.dp1.redex.dao.sales.IIncident;\r\nimport pucp.dp1.redex.model.PACK.Flight;\r\nimport pucp.dp1.redex.model.location.Country;\r\nimport pucp.dp1.redex.model.route.FlightPlan;\r\nimport pucp.dp1.redex.model.route.FlightPlanStatus;\r\nimport pucp.dp1.redex.model.route.RoutePlan;\r\nimport pucp.dp1.redex.model.route.RoutePlanStatus;\r\nimport pucp.dp1.redex.model.sales.*;\r\nimport pucp.dp1.redex.model.storage.Package;\r\nimport pucp.dp1.redex.model.storage.PackageStatus;\r\nimport pucp.dp1.redex.model.storage.StorageRegister;\r\nimport pucp.dp1.redex.model.storage.Warehouse;\r\nimport pucp.dp1.redex.model.utils.FlightElement;\r\nimport pucp.dp1.redex.router.AirportsMap;\r\nimport pucp.dp1.redex.services.impl.route.FlightPlanService;\r\nimport pucp.dp1.redex.services.impl.sales.AirportService;\r\nimport pucp.dp1.redex.services.impl.sales.DispatchService;\r\nimport pucp.dp1.redex.services.impl.storage.StorageRegisterService;\r\nimport pucp.dp1.redex.services.impl.storage.WarehouseService;\r\nimport pucp.dp1.redex.services.impl.PACK.FlightService;\r\nimport pucp.dp1.redex.services.impl.location.ContinentService;\r\nimport pucp.dp1.redex.services.impl.location.CountryService;\r\n@Service\r\npublic class AStar {\r\n\t@Autowired\r\n\tprivate AirportsMap airportMap;\r\n\t@Autowired\r\n\tprivate FlightPlanService serviceFlightPlan;\r\n\t@Autowired\r\n\tprivate WarehouseService serviceWarehouse;\r\n\t@Autowired\r\n\tprivate StorageRegisterService serviceStorage;\r\n\t@Autowired\r\n\tprivate AirportService serviceAirport;\r\n\t@Autowired\r\n\tprivate DispatchService serviceDispatch;\r\n\t@Autowired\r\n\tprivate IIncident daoIncident;\r\n\t@Autowired\r\n\tprivate CountryService daoCountry;\r\n\t@Autowired\r\n\tprivate FlightService serviceFlight;\r\n\tprivate Map<Airport, List<Flight>> map;\r\n\tpublic Map<Airport, List<Flight>> getMap() {\r\n\t\tmap = airportMap.getGraph();\r\n\t\treturn map;\r\n\t}\r\n\tpublic Node getLowestDistanceNode(Set<Node> unsettledNodes) {\r\n\t\tNode lowestDistanceNode = null;\r\n\t\tdouble lowestDistance = Double.MAX_VALUE;\r\n\t\tfor (Node node : unsettledNodes) {\r\n\t\t\tdouble nodeDistance = node.getDistance() + node.getHeuristic();\r\n\t\t\tif (nodeDistance < lowestDistance) {\r\n\t\t\t\tlowestDistance = nodeDistance;\r\n\t\t\t\tlowestDistanceNode = node;\r\n\t\t\t\t// if(lowestDistanceNode.getId()==40){\r\n\t\t\t\t// \tSystem.out.println(\"holaa\");\r\n\t\t\t\t// }\r\n\t\t\t\t//System.out.println(lowestDistanceNode.getFlightPlan().getArrivalTimeUtc());\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn lowestDistanceNode;\r\n\t}\r\n\tprivate Map<Pair<Integer,Date>, FlightPlan> fpMap = null;\r\n\tpublic List<Node> calculateShortestPathFromSource( Node start,Node objective, LocalDate date, LocalTime time, Integer cantPackages) {\r\n\t\tInteger minComunCap=0;\r\n\t\tNode currentNode=null;\r\n\t\tList<Node>  bestWays =new LinkedList<>();\r\n\t\tInteger packagesProcesados,packagesProcesadosR;\r\n\t\tDouble timeAc=0.0,tMax;\r\n\t\ttMax=maxTiempo(start,objective);\r\n\t\tfpMap=serviceFlightPlan.findAll().stream().collect(Collectors.toMap(fp->new Pair<Integer,Date>(fp.getFlight().getIdFlight(),fp.getTakeOffDate()), fp->fp));\r\n\t\tPair<Integer,Date> llaves = null;\r\n\t\twhile(true){\r\n\t\t\tif(cantPackages <= 0) break;\r\n\t\t\tminComunCap=cantPackages;\r\n\t\t\tSet<Node> settledNodes = new HashSet<>();\r\n\t\t\tPriorityQueue<Node> unsettledNodes = new PriorityQueue<>(new Comparator<Node>() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic int compare(Node a, Node b) {\r\n\t\t\t\t\tif ( a.getDistance() + a.getHeuristic() > b.getDistance() + b.getHeuristic() ) return 1;\r\n\t\t\t\t\telse if (a.getDistance() + a.getHeuristic() < b.getDistance() + b.getHeuristic()) return -1;\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//Set<Node> unsettledNodes = new HashSet<>();\r\n\t\t\tcurrentNode=null;\r\n\t\t\tstart.setDistance(0.0);\r\n\t\t\tunsettledNodes.add(start);\r\n\t\t\twhile (unsettledNodes.size() != 0) {\r\n\t\t\t\t//currentNode = getLowestDistanceNode(unsettledNodes);\r\n\t\t\t\tcurrentNode = unsettledNodes.poll();\r\n\t\t\t\tif(minComunCap > currentNode.getPackagesProcesados() && currentNode.getId()!=start.getId()) minComunCap = currentNode.getPackagesProcesados();\r\n\t\t\t\tunsettledNodes.remove(currentNode);\r\n\t\t\t\tsettledNodes.add(currentNode);\r\n\t\t\t\ttimeAc+=currentNode.getDistance();\r\n\t\t\t\tif(timeAc>tMax){\r\n\t\t\t\t\tSystem.out.println(\"Colapso\");\r\n\t\t\t\t\tNode nodoColapso=new Node();\r\n\t\t\t\t\tnodoColapso.setColapso(true);\r\n\t\t\t\t\tList<Node> listaColapso =new LinkedList<>();\r\n\t\t\t\t\tlistaColapso.add(nodoColapso);\r\n\t\t\t\t\treturn listaColapso;\r\n\t\t\t\t}\r\n\t\t\t\tif(currentNode.getId() == objective.getId() ){\r\n\t\t\t\t\t//deberá retornar el current node\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tfor (Entry<Node, Pair<Double, Flight>> adjacencyPair : currentNode.getAdjacentNodes().entrySet()) {//aqui se generan suscesores de node_n\r\n\t\t\t\t\tNode adjacentNode = adjacencyPair.getKey();\r\n\t\t\t\t\tFlight f = adjacencyPair.getValue().getValue();\r\n\t\t\t\t\tLocalTime takeOff, arrival;\r\n\t\t\t\t\tDouble newDistance=0.0;\r\n\t\t\t\t\tBoolean isStart=false, flagFP=false;\r\n\t\t\t\t\tInteger takeOffUtc, arrivalUtc;\r\n\t\t\t\t\tif(f.getTakeOffAirport().getId() == start.getId()) isStart=true;\r\n\t\t\t\t\ttakeOff= f.getTakeOffTime().toLocalTime();\r\n\t\t\t\t\tarrival = f.getArrivalTime().toLocalTime();\r\n\t\t\t\t\ttakeOffUtc =f.getTakeOffAirport().getCity().getCountry().getUtc();\r\n\t\t\t\t\tarrivalUtc =f.getArrivalAirport().getCity().getCountry().getUtc();\r\n\t\t\t\t\tLocalDate takeOfDate = calcularTakeOfDate(isStart,date, time, takeOff, arrival);\r\n\t\t\t\t\tLocalDate arrivalDate = calcularArrivalDate(isStart,date, time, takeOff, arrival);\r\n\t\t\t\t\t//FlightPlan fp = buscarFP(f,takeOfDate);\r\n\t\t\t\t\tllaves = new Pair<Integer,Date>(f.getIdFlight(),Date.from(takeOfDate.atStartOfDay(ZoneId.systemDefault()).toInstant()));\r\n\t\t\t\t\tFlightPlan fp = fpMap.get(llaves);\r\n\t\t\t\t\tif(fp==null){\r\n\t\t\t\t\t\tflagFP = true;\r\n\t\t\t\t\t\tfp= new FlightPlan(f);\r\n\t\t\t\t\t\tDate takeOfDate2=Date.from(takeOfDate.atStartOfDay(ZoneId.systemDefault()).toInstant());\r\n\t\t\t\t\t\tDate arrivalDate2=Date.from(arrivalDate.atStartOfDay(ZoneId.systemDefault()).toInstant());\r\n\t\t\t\t\t\tfp.setTakeOffDate(takeOfDate2);\r\n\t\t\t\t\t\tfp.setArrivalDate(arrivalDate2);\r\n\t\t\t\t\t\tsetearArrivalTakeOffUTC(fp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tadjacentNode.setArrivalFlight(f);\r\n\t\t\t\t\tadjacentNode.setFather(currentNode);\r\n\t\t\t\t\tadjacentNode.setHeuristic(heuristic(adjacentNode.getArrivalFlight().getArrivalAirport(),currentNode.getId(), objective.getId(), time));\r\n\t\t\t\t\tnewDistance=durationBetweenTime(isStart,date, time, takeOff, arrival, takeOffUtc, arrivalUtc,fp);//actualiza el fp\r\n\t\t\t\t\tpackagesProcesados= hayCapacidad(f, f.getArrivalAirport().getWarehouse(), cantPackages,fp);\r\n\t\t\t\t\t//fp.setPackagesNumber(packagesProcesados);\r\n\t\t\t\t\t//fp.setPackagesNumberSimulated(packagesProcesados);\r\n\t\t\t\t\tif(flagFP) fp.setOccupiedCapacity(packagesProcesados);\r\n\t\t\t\t\tadjacentNode.setFlightPlan(fp);\r\n\t\t\t\t\tif(packagesProcesados > 0){\r\n\t\t\t\t\t\tadjacentNode.setDistance(currentNode.getDistance() + newDistance);\r\n\t\t\t\t\t\tadjacentNode.setPackagesProcesados(packagesProcesados);\r\n\t\t\t\t\t\tadjacentNode.setArrivalFlight(f);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tDouble n=Double.MAX_VALUE;\r\n\t\t\t\t\t\tadjacentNode.setDistance(n);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!settledNodes.contains(adjacentNode) && !unsettledNodes.contains(adjacentNode)) {\r\n\t\t\t\t\t\tunsettledNodes.add(adjacentNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t//if unsettlet tiene un nodo que es el mismo pais\r\n\t\t\t\t\t\tNode oldCurrentNode;\r\n\t\t\t\t\t\toldCurrentNode = contiene(unsettledNodes,adjacentNode.getId());\r\n\t\t\t\t\t\tif(oldCurrentNode!=null){\r\n\t\t\t\t\t\t\tif(adjacentNode.getDistance() < oldCurrentNode.getDistance()){\r\n\t\t\t\t\t\t\t\t//actualizar el nodo anterior con un nuevo papá, nueva distancia y demás\r\n\t\t\t\t\t\t\t\t//debe actualizarse a en el espacio de memoria, para que se actualice en la cola\r\n\t\t\t\t\t\t\t\t//ver disponibilidad\r\n\t\t\t\t\t\t\t\tpackagesProcesadosR= hayCapacidad(adjacentNode.getArrivalFlight(), adjacentNode.getArrivalFlight().getArrivalAirport().getWarehouse(), minComunCap,fp);\r\n\t\t\t\t\t\t\t\tif(packagesProcesadosR>=minComunCap){\r\n\t\t\t\t\t\t\t\t\t//solo se actualiza si tenía mayor o igual capacidad que la otra opcion\r\n\t\t\t\t\t\t\t\t\toldCurrentNode.setPackagesProcesados(adjacentNode.getPackagesProcesados());\r\n\t\t\t\t\t\t\t\t\toldCurrentNode.setDistance(adjacentNode.getDistance());\r\n\t\t\t\t\t\t\t\t\toldCurrentNode.setArrivalFlight(adjacentNode.getArrivalFlight());\r\n\t\t\t\t\t\t\t\t\toldCurrentNode.setFather(adjacentNode.getFather());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\t\t\tactualizarCapacidad(start,currentNode,minComunCap);\r\n\t\t\tcantPackages-=minComunCap;\r\n\t\t\tbestWays.add(currentNode);\r\n\t\t\t//actualizarStart(start, objective.getId());\r\n\t\t}\r\n\t\treturn bestWays;\r\n\t}\r\n\r\n\tpublic void setearArrivalTakeOffUTC(FlightPlan fp){\r\n\t\tint takeOffUtc =fp.getFlight().getTakeOffAirport().getCity().getCountry().getUtc();\r\n\t\tint arrivalUtc =fp.getFlight().getArrivalAirport().getCity().getCountry().getUtc();\r\n\r\n\t\tLocalTime takeOff= fp.getFlight().getTakeOffTime().toLocalTime();\r\n\t\tLocalTime arrival= fp.getFlight().getArrivalTime().toLocalTime();\r\n\r\n\t\tif(takeOffUtc>0) takeOff=takeOff.minusHours(takeOffUtc);\r\n\t\telse {\r\n\t\t\ttakeOffUtc*=-1;\r\n\t\t\ttakeOff=takeOff.plusHours(takeOffUtc);\r\n\t\t}\r\n\r\n\t\tif(arrivalUtc>0) arrival=arrival.minusHours(arrivalUtc);\r\n\t\telse {\r\n\t\t\tarrivalUtc*=-1;\r\n\t\t\tarrival=arrival.plusHours(arrivalUtc);\r\n\t\t}\r\n\r\n\t\tfp.setArrivalTimeUtc(Time.valueOf(arrival));\r\n\t\tfp.setTakeOffTimeUtc(Time.valueOf(takeOff));\r\n\r\n\r\n\t}\r\n\r\n\tprivate LocalDate calcularArrivalDate(Boolean isStart, LocalDate date,LocalTime time,LocalTime start, LocalTime end) {\r\n\r\n\t\t//Integer dia=0;\r\n\t\tLocalDate arrivalDate=date;\r\n\t\t//calcular tiempo hasta el vuelo\r\n\t\tif(time.isAfter(start))\tarrivalDate.plusDays(1);\r\n\r\n\t\t//calcular tiempo desde el arrivo hasta la llegada\r\n\t\tif (start.isAfter(end)) arrivalDate.plusDays(1);\r\n\r\n\t\treturn arrivalDate;\r\n\t}\r\n\tprivate Double maxTiempo(Node start, Node objective) {\r\n\t\tString continentSt,continentObj;\r\n\t\tInteger utcSt,utcObj,izqDer=-1;//izq=-1,der=1\r\n\t\tCountry c;\r\n\t\tDouble maxTime=0.0;\r\n\r\n\t\tc=(daoCountry.findById(start.getId())).get();\r\n\t\tcontinentSt=c.getContinent().getName();\r\n\t\tutcSt=c.getUtc();\r\n\r\n\t\tc=(daoCountry.findById(objective.getId())).get();\r\n\t\tcontinentObj=c.getContinent().getName();\r\n\t\tutcObj=c.getUtc();\r\n\t\tif(utcSt<utcObj) izqDer=1;\r\n\r\n\t\tif(continentSt==continentObj) maxTime=24.0*60;\r\n\t\telse maxTime=48.0*60;\r\n\r\n\t\tif(izqDer>0) maxTime-=utcObj;\r\n\t\telse maxTime+=utcObj;\r\n\r\n\t\treturn maxTime;\r\n\r\n\t}\r\n\tprivate LocalDate calcularTakeOfDate(Boolean isStart, LocalDate date,LocalTime time,LocalTime start, LocalTime end) {\r\n\r\n\t\t//Integer dia=0;\r\n\t\tLocalDate diaTakeOff=date;\r\n\r\n\t\t//calcular tiempo hasta el vuelo\r\n\t\tif(time.isAfter(start))\tdiaTakeOff.plusDays(1);\r\n\r\n\t\treturn diaTakeOff;\r\n\r\n\t}\r\n\tprivate FlightPlan buscarFP(Flight f, LocalDate date) {\r\n\t\tFlightPlan fpResult=null;\r\n\t\tList<FlightPlan> listFP;\r\n\t\tlistFP = serviceFlightPlan.findAll();\r\n\t\tDate dia;\r\n\t\tdia=Date.from(date.atStartOfDay(ZoneId.systemDefault()).toInstant());\r\n\t\tfor(FlightPlan fp:listFP){\r\n\t\t\tif(fp.getFlight().getIdFlight()==f.getIdFlight() && fp.getTakeOffDate().equals(dia)){\r\n\t\t\t\tfpResult=fp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fpResult;\r\n\t}\r\n\tNode contiene(Set<Node> unsettledNodes, Integer id){\r\n\t\tNode result=null;\r\n\t\tfor (Node node :  unsettledNodes){\r\n\t\t\tif (node.getId()==id){\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tNode contiene(PriorityQueue<Node> unsettledNodes, Integer id){\r\n\t\tNode result=null;\r\n\t\tfor (Node node :  unsettledNodes){\r\n\t\t\tif (node.getId()==id){\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate void actualizarCapacidad(Node start, Node node, Integer minComunCapac) {\r\n\t\twhile(true){\r\n\t\t\tif(node.getId()==start.getId()) break;\r\n\t\t\tFlight f=node.getArrivalFlight();\r\n\t\t\tFlightPlan fp=node.getFlightPlan();\r\n\t\t\tWarehouse w=f.getArrivalAirport().getWarehouse();\r\n\t\t\t//serviceFlight.updateOccupiedCapacity(f.getIdFlight(),f.getOccupiedCapacity()+minComunCapac);\r\n\t\t\tserviceFlightPlan.updateOccupiedCapacity(fp.getId(),fp.getOccupiedCapacity()+minComunCapac);\r\n\t\t\tserviceWarehouse.updateOccupiedCapacity(w.getId(), w.getOccupiedCapacity()+minComunCapac);\r\n\t\t\tnode=node.getFather();\r\n\t\t}\r\n\t}\r\n\tpublic double heuristic(Airport arrivalAirport, Integer takeOffNode, Integer objective, LocalTime time){\r\n\t\tdouble  timeHeu= 10000000.0;\r\n\t\tDouble tEspera=0.0;\r\n\t\tInteger idFlight;\r\n\t\tList<FlightElement> listBestFlights = serviceFlight.findBestFlight(takeOffNode, objective);\r\n\r\n\t\tif(arrivalAirport.getId()==objective){\r\n\r\n\r\n\t\t\tif(listBestFlights.size()>0 ) {\r\n\t\t\t\t//tomar el menor tiempo de los vuelos directos que existan\r\n\t\t\t\tfor (FlightElement f : listBestFlights) {\r\n\r\n\t\t\t\t\tint takeOffUtc = f.getTakeOffAirport().getCity().getCountry().getUtc();\r\n\t\t\t\t\tint arrivalUtc = f.getArrivalAirport().getCity().getCountry().getUtc();\r\n\t\t\t\t\tf.setArrivalTime(serviceFlight.findBestFlightArrivalTime(f.getIdFlight()).toLocalTime());\r\n\t\t\t\t\tf.setTakeOffTime(serviceFlight.findBestFlightTakeOffTime(f.getIdFlight()).toLocalTime());\r\n\t\t\t\t\ttEspera = durationBetweenTime(time, f.getTakeOffTime(),takeOffUtc,arrivalUtc);\r\n\t\t\t\t\tDouble newTimeHeu= tEspera + durationBetweenTime(f.getTakeOffTime(),f.getArrivalTime(),takeOffUtc,arrivalUtc);\r\n\t\t\t\t\tidFlight= f.getIdFlight();\r\n\t\t\t\t\tif(timeHeu>newTimeHeu) timeHeu=newTimeHeu;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\treturn timeHeu;\r\n\t}\r\n\tpublic void  actualizarStart(Node start,Integer objective){\r\n\t\tMap<Airport, List<Flight>> graphOld = this.getMap();\r\n\t\tMap<Integer, Node> nodes = new HashMap<>();\r\n\t\tAirport objectiveAirport = null;\r\n\t\tGraph graphNew = new Graph();\r\n\r\n\t\tfor (Airport airport : graphOld.keySet()) {\r\n\t\t\tif (objective.equals(airport.getId())) {\r\n\t\t\t\tobjectiveAirport = airport;\r\n\t\t\t}\r\n\t\t\tNode n = new Node(airport.getId());\r\n\t\t\tnodes.put(airport.getId(), n);\r\n\t\t}\r\n\t\tif (objectiveAirport == null) {\r\n\t\t\tSystem.out.println(\"No se esta encontrando el aeropuerto objetivo\");\r\n\t\t}\r\n\r\n\t\tfor (Airport airport : graphOld.keySet()) {\r\n\t\t\tList<Flight> flights = graphOld.get(airport);\r\n\t\t\tfor (Flight f : flights) {\r\n\t\t\t\tnodes.get(airport.getId()).addDestination(nodes.get(f.getArrivalAirport().getId()), 0, f,10000000.0);\r\n\t\t\t}\r\n\t\t\tgraphNew.addNode(nodes.get(airport.getId()));\r\n\t\t}\r\n\t\tstart =nodes.get(start.getId());\r\n\r\n\t}\r\n\tpublic List <RoutePlan> getShortestPath(Integer start, Integer objective, LocalDate date, LocalTime time, boolean simulated, Integer cantPackages) {\r\n\t\t// List<Flight> result=new ArrayList<>();\r\n\t\tDouble tEspera=0.0;\r\n\t\tDouble timeHeu= 10000000.0;\r\n\t\tList<Double> bestHeuristics=null;\r\n\t\tMap<Airport, List<Flight>> graphOld = this.getMap();\r\n\t\tMap<Integer, Node> nodes = new HashMap<>();\r\n\t\tGraph graphNew = new Graph();\r\n\t\tAirport objectiveAirport = null;\r\n\t\tInteger idFlight;\r\n\t\tList<Integer> bestIdFlight=null;\r\n\t\t//LocalTime timeActual = LocalTime.now();\r\n\t\t// Create nodes\r\n\t\tfor (Airport airport : graphOld.keySet()) {\r\n\t\t\tif (objective.equals(airport.getId())) {\r\n\t\t\t\tobjectiveAirport = airport;\r\n\t\t\t}\r\n\t\t\tNode n = new Node(airport.getId());\r\n\t\t\tnodes.put(airport.getId(), n);\r\n\t\t}\r\n\r\n\t\tif (objectiveAirport == null) {\r\n\t\t\tSystem.out.println(\"No se esta encontrando el aeropuerto objetivo\");\r\n\t\t}\r\n\r\n\t\tfor (Airport airport : graphOld.keySet()) {\r\n\t\t\tList<Flight> flights = graphOld.get(airport);\r\n\t\t\tfor (Flight f : flights) {\r\n\t\t\t\tnodes.get(airport.getId()).addDestination(nodes.get(f.getArrivalAirport().getId()), 0, f,timeHeu);\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tgraphNew.addNode(nodes.get(airport.getId()));\r\n\t\t}\r\n\r\n\r\n\t\tList <Node> listResult = calculateShortestPathFromSource( nodes.get(start),nodes.get(objective), date, time, cantPackages);\r\n\r\n\t\t// Logica que pablo comento ya implementada\r\n\t\tList <RoutePlan> listplan = new ArrayList<>();\r\n\t\t//obtengo el shortestPath hasta este momento\r\n\t\tfor(Node result: listResult){\r\n\t\t\tif(result.getColapso()==true){\r\n\t\t\t\tList <RoutePlan> rpColapso = null;\r\n\t\t\t\treturn rpColapso;\r\n\t\t\t}\r\n\r\n\t\t\tLinkedList<Pair<Node, FlightPlan>> shortestPath = new LinkedList<Pair<Node, FlightPlan>>(result.getShortestPath());\r\n\t\t\tRoutePlan rPlan = new RoutePlan();\r\n\t\t\tList<FlightPlan> listFlightPlan = new ArrayList<>();\r\n\t\t\twhile(true){\r\n\t\t\t\tFlightPlan fp= result.getFlightPlan();\r\n\t\t\t\trPlan.setCurrentStage(0);\r\n\t\t\t\trPlan.setStatus(RoutePlanStatus.EN_EJECUCION);\r\n\t\t\t\tlistFlightPlan.add(fp);\r\n\t\t\t\tif(fp!=null){\r\n\t\t\t\t\tPair<Node, FlightPlan> pair = new Pair<Node, FlightPlan>(result,fp);\r\n\t\t\t\t\t//agrego el par al shortestPath\r\n\t\t\t\t\tshortestPath.add(pair);\r\n\t\t\t\t\t//obtengo el nodo padre anterior\r\n\r\n\t\t\t\t}\r\n\t\t\t\tresult = result.getFather();\r\n\t\t\t\tif (result.getFather()==null) break;\r\n\r\n\r\n\t\t\t}\r\n\t\t\t//result.setShortestPath(shortestPath);\r\n\t\t\trPlan.setFlightPlans(listFlightPlan);\r\n\t\t\tlistplan.add(rPlan);\r\n\t\t\t//result.addListShortestPath(shortestPath);\r\n\t\t}\r\n\t\treturn listplan;\r\n\t}\r\n\tprivate Double getBestTime(Integer start, Integer objective) {\r\n\t\treturn null;\r\n\t}\r\n\tpublic Integer insertHistoricPackage(String originAirport, String destinationAirport, LocalDate dateS, LocalTime time, Integer cantPackages) {\r\n\t\tList <RoutePlan> listplan = new ArrayList<>();\r\n\t\tint resultado=0;\r\n\t\t/* Obtener id de aeropuertos */\r\n\t\tOptional<Airport> oDestination = serviceAirport.findByCode(destinationAirport);\r\n\t\tOptional<Airport> oOrigin = serviceAirport.findByCode(originAirport);\r\n\t\tif (oDestination.isPresent() && oOrigin.isPresent()) {\r\n\t\t\tAirport origin = oOrigin.get();\r\n\t\t\tAirport destination = oDestination.get();\r\n\t\t\tLocalDate date = dateS;\r\n\t\t\t//time.plusHours(5);\r\n\t\t\tif (date == null || time == null) {\r\n\t\t\t\tSystem.out.println(\"Error en convertir fechas u horas\");\r\n\t\t\t\tSystem.out.println(date);\r\n\t\t\t\tSystem.out.println(time);\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlistplan = getShortestPath(origin.getId(), destination.getId(), date, time,true,cantPackages);\r\n\t\t\t\t//RoutePlan plan = determinRoute(origin.getId(), destination.getId(), date, time,true,cantPackages);\r\n\t\t\t\tif(listplan==null) return 0;\r\n\r\n\t\t\t\tfor(RoutePlan plan: listplan){\r\n\t\t\t\t\tif (plan.getFlightPlans().size() > 0) {\r\n\t\t\t\t\t\t/* Se encontró resultado */\r\n\r\n\t\t\t\t\t\t/* Crear package */\r\n\t\t\t\t\t\tPackage p = new Package();\r\n\t\t\t\t\t\tp.setDescription(\"Paquete de registro histórico\");\r\n\t\t\t\t\t\tp.setRoutePlan(plan);\r\n\t\t\t\t\t\tp.setStatus(PackageStatus.SIMULADO);\r\n\t\t\t\t\t\tp.setActive(true);\r\n\r\n\t\t\t\t\t\t/* Crear dispatch */\r\n\t\t\t\t\t\tDispatch d = new Dispatch();\r\n\t\t\t\t\t\td.setDestinationAirport(destination);\r\n\t\t\t\t\t\td.setOriginAirport(origin);\r\n\t\t\t\t\t\td.setPack(p);\r\n\t\t\t\t\t\td.setRegisterDate(LocalDateTime.of(date, time));\r\n\t\t\t\t\t\td.setStatus(DispatchStatus.SIMULADO);\r\n\t\t\t\t\t\td.setActive(true);\r\n\t\t\t\t\t\td = serviceDispatch.save(d,true,convertDateAndTimeToDate(convertToDateViaSqlDate(date), Time.valueOf(time)));\r\n\t\t\t\t\t\tp = d.getPack();\r\n\t\t\t\t\t\tresultado= 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tSystem.out.println(\"No existe alguno de los aeropuertos\");\r\n\t\t\tresultado=0;}\r\n\t\treturn resultado;\r\n\t}\r\n\tpublic LocalDate convertStringToLocalDate(String date) {\r\n\t\ttry {\r\n\t\t\tSimpleDateFormat formatterDate = new SimpleDateFormat(\"yyyyMMdd\");\r\n\t\t\tDate dateDate;\r\n\t\t\tdateDate = formatterDate.parse(date);\r\n\t\t\treturn convertToLocalDateViaInstant(dateDate);\r\n\t\t} catch (ParseException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tpublic LocalTime convertStringToLocalTime(String time) {\r\n\t\ttry {\r\n\t\t\tDateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH:mm\");\r\n\t\t\treturn LocalTime.parse(time, formatter);\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tpublic double durationBetweenTime(LocalTime start, LocalTime end) {\r\n\t\tif (end.isAfter(start)) {\r\n\t\t\treturn Duration.between(start, end).toMinutes();\r\n\t\t} else {\r\n\t\t\tdouble acumulator;\r\n\t\t\tacumulator = Duration.between(start, LocalTime.parse(\"23:59:59\")).toMinutes();\r\n\t\t\tacumulator += Duration.between(LocalTime.parse(\"00:00:00\"), end).toMinutes();\r\n\t\t\treturn acumulator;\r\n\t\t}\r\n\t}\r\n\tpublic Integer hayCapacidad(Flight f,Warehouse w,Integer cantPackages, FlightPlan fp){\r\n\t\tInteger res=0;\r\n\r\n\t\tInteger cantOcupadaAntF=0,cantOcupadaAntA=0,cantMaxF,cantMaxA,cantDisponible,cantDisponibleA,cantDisponibleF,cantPorOcupar,packagesPorProcesar;\r\n\t\tcantMaxF=f.getCapacity();\r\n\t\tcantMaxA=w.getCapacity();\r\n\t\t//cantOcupadaAntF=fp.getOccupiedCapacity();\r\n\t\tcantOcupadaAntA=w.getOccupiedCapacity();\r\n\t\tcantDisponibleA=cantMaxA-cantOcupadaAntA;\r\n\t\tcantDisponibleF=cantMaxF-cantOcupadaAntF;\r\n\t\tcantDisponible = Math.min(cantDisponibleF,cantDisponibleA);\r\n\t\tif(cantDisponible<=0){\r\n\t\t\t//no hay capacidad\r\n\t\t\tres=0;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tcantPorOcupar=cantDisponible-cantPackages;\r\n\t\t\tif(cantPorOcupar>0){\r\n\t\t\t\t//entra todo\r\n\t\t\t\tres=cantPackages;\r\n\t\t\t}else{\r\n\t\t\t\t//entra parcial\r\n\t\t\t\tres=cantDisponible;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\tpublic double durationBetweenTime(Boolean isStart, LocalDate date,LocalTime time,LocalTime start, LocalTime end, Integer utcStart, Integer utcEnd, FlightPlan fp)  {\r\n\t\tdouble acumulator=0;\r\n\t\tInteger dia=0;\r\n\t\tLocalDate diaFinLC=date;\r\n\r\n\t\tif(!isStart) acumulator+=60; //agregar una hora si es escala\r\n\r\n\t\tif(utcStart>0) start=start.minusHours(utcStart);\r\n\t\telse {\r\n\t\t\tutcStart*=-1;\r\n\t\t\tstart=start.plusHours(utcStart);\r\n\t\t}\r\n\r\n\t\tif(utcEnd>0) end=end.minusHours(utcEnd);\r\n\t\telse {\r\n\t\t\tutcEnd*=-1;\r\n\t\t\tend=end.plusHours(utcEnd);\r\n\t\t}\r\n\r\n\t\t//calcular tiempo hasta el vuelo\r\n\t\tif(time.isBefore(start)){\r\n\t\t\tacumulator += Duration.between(time, start).toMinutes();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdia++;\r\n\t\t\tacumulator += Duration.between(time, LocalTime.parse(\"23:59:59\")).toMinutes();\r\n\t\t\tacumulator += Duration.between( LocalTime.parse(\"00:00:00\"),start).toMinutes();\r\n\t\t}\r\n\r\n\t\t//calcular tiempo desde el arrivo hasta la llegada\r\n\t\tif (start.isBefore(end)) {\r\n\t\t\tacumulator += Duration.between(start, end).toMinutes();\r\n\t\t} else {\r\n\t\t\tdia++;\r\n\t\t\tacumulator += Duration.between(start, LocalTime.parse(\"23:59:59\")).toMinutes();\r\n\t\t\tacumulator += Duration.between(LocalTime.parse(\"00:00:00\"), end).toMinutes();\r\n\t\t}\r\n\t\treturn acumulator;\r\n\t}\r\n\r\n\tpublic double durationBetweenTime(LocalTime start, LocalTime end, Integer utcStart, Integer utcEnd) {\r\n\t\tdouble acumulator;\r\n\t\tif(utcStart>0){\r\n\t\t\tstart=start.minusHours(utcStart);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tutcStart*=-1;\r\n\t\t\tstart=start.plusHours(utcStart);\r\n\t\t}\r\n\r\n\t\tif(utcEnd>0){\r\n\t\t\tend=end.minusHours(utcEnd);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tutcEnd*=-1;\r\n\t\t\tend=end.plusHours(utcEnd);\r\n\t\t}\r\n\r\n\t\tacumulator  =durationBetweenTime( start,  end);\r\n\t\treturn acumulator;\r\n\t}\r\n\r\n\tpublic double durationBetweenTime(Boolean isStart, LocalDate date,LocalTime time,LocalTime start, LocalTime end,  FlightPlan fp)  {\r\n\t\tdouble acumulator=0;\r\n\t\tInteger dia=0;\r\n\t\tLocalDate diaFinLC=date;\r\n\t\tDate diaIni,diaFin;\r\n\r\n\r\n\t\tif(!isStart) acumulator+=60; //agregar una hora si es escala\r\n\r\n\r\n\r\n\t\t//calcular tiempo hasta el vuelo\r\n\t\tif(time.isBefore(start)){\r\n\t\t\tacumulator += Duration.between(time, start).toMinutes();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdia++;\r\n\t\t\tacumulator += Duration.between(time, LocalTime.parse(\"23:59:59\")).toMinutes();\r\n\t\t\tacumulator += Duration.between( LocalTime.parse(\"00:00:00\"),start).toMinutes();\r\n\t\t}\r\n\r\n\t\t//calcular tiempo desde el arrivo hasta la llegada\r\n\t\tif (start.isBefore(end)) {\r\n\t\t\tacumulator += Duration.between(start, end).toMinutes();\r\n\t\t} else {\r\n\t\t\tdia++;\r\n\t\t\tacumulator += Duration.between(start, LocalTime.parse(\"23:59:59\")).toMinutes();\r\n\t\t\tacumulator += Duration.between(LocalTime.parse(\"00:00:00\"), end).toMinutes();\r\n\t\t}\r\n\r\n\t\tdiaIni=Date.from(date.atStartOfDay(ZoneId.systemDefault()).toInstant());\r\n\t\tdiaFinLC.plusDays(dia);\r\n\t\tdiaFin=Date.from(diaFinLC.atStartOfDay(ZoneId.systemDefault()).toInstant());\r\n\t\t//fp.setTakeOffDate(diaIni);\r\n\t\t//fp.setArrivalDate(diaFin);\r\n\t\treturn acumulator;\r\n\t}\r\n\tpublic LocalDate convertToLocalDateViaInstant(Date dateToConvert) {\r\n\t\treturn LocalDate.parse(new SimpleDateFormat(\"yyyy-MM-dd\").format(dateToConvert));\r\n\t}\r\n\tpublic Date convertToDateViaSqlDate(LocalDate dateToConvert) {\r\n\t\treturn java.sql.Date.valueOf(dateToConvert);\r\n\t}\r\n\tpublic Date convertDateAndTimeToDate(Date arrivalDate, Time arrivalTime) {\r\n\t\ttry {\r\n\t\t\tString time = arrivalTime.toString();\r\n\t\t\tSimpleDateFormat formatterDate = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n\t\t\tString date = formatterDate.format(arrivalDate);\r\n\t\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n\t\t\tString concatenado;\r\n\t\t\tconcatenado = date.concat(\" \").concat(time);\r\n\t\t\t// System.out.println(date.concat(\" \").concat(time).concat(\"\r\n\t\t\t// \").concat(concatenado));\r\n\t\t\treturn formatter.parse(concatenado);\r\n\t\t} catch (ParseException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/pucp/dp1/redex/router/algorithms/AStar.java b/src/main/java/pucp/dp1/redex/router/algorithms/AStar.java
--- a/src/main/java/pucp/dp1/redex/router/algorithms/AStar.java	(revision a12a5d2deb70062fe7edf6f0babea99edded232e)
+++ b/src/main/java/pucp/dp1/redex/router/algorithms/AStar.java	(date 1670556262936)
@@ -12,7 +12,6 @@
 import java.util.Map.Entry;
 import java.util.stream.Collectors;
 import javax.print.attribute.standard.Destination;
-
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import javafx.util.Pair;
@@ -59,6 +58,7 @@
 	@Autowired
 	private FlightService serviceFlight;
 	private Map<Airport, List<Flight>> map;
+	private Map<Pair<Integer,Date>, FlightPlan> fpMap = null;
 	public Map<Airport, List<Flight>> getMap() {
 		map = airportMap.getGraph();
 		return map;
@@ -79,7 +79,6 @@
 		}
 		return lowestDistanceNode;
 	}
-	private Map<Pair<Integer,Date>, FlightPlan> fpMap = null;
 	public List<Node> calculateShortestPathFromSource( Node start,Node objective, LocalDate date, LocalTime time, Integer cantPackages) {
 		Integer minComunCap=0;
 		Node currentNode=null;
@@ -203,32 +202,6 @@
 		}
 		return bestWays;
 	}
-
-	public void setearArrivalTakeOffUTC(FlightPlan fp){
-		int takeOffUtc =fp.getFlight().getTakeOffAirport().getCity().getCountry().getUtc();
-		int arrivalUtc =fp.getFlight().getArrivalAirport().getCity().getCountry().getUtc();
-
-		LocalTime takeOff= fp.getFlight().getTakeOffTime().toLocalTime();
-		LocalTime arrival= fp.getFlight().getArrivalTime().toLocalTime();
-
-		if(takeOffUtc>0) takeOff=takeOff.minusHours(takeOffUtc);
-		else {
-			takeOffUtc*=-1;
-			takeOff=takeOff.plusHours(takeOffUtc);
-		}
-
-		if(arrivalUtc>0) arrival=arrival.minusHours(arrivalUtc);
-		else {
-			arrivalUtc*=-1;
-			arrival=arrival.plusHours(arrivalUtc);
-		}
-
-		fp.setArrivalTimeUtc(Time.valueOf(arrival));
-		fp.setTakeOffTimeUtc(Time.valueOf(takeOff));
-
-
-	}
-
 	private LocalDate calcularArrivalDate(Boolean isStart, LocalDate date,LocalTime time,LocalTime start, LocalTime end) {
 
 		//Integer dia=0;
@@ -450,15 +423,13 @@
 		}
 		return listplan;
 	}
-	private Double getBestTime(Integer start, Integer objective) {
-		return null;
-	}
 	public Integer insertHistoricPackage(String originAirport, String destinationAirport, LocalDate dateS, LocalTime time, Integer cantPackages) {
 		List <RoutePlan> listplan = new ArrayList<>();
+		Map<String,Optional<Airport>> airports = serviceAirport.findAll().stream().collect(Collectors.toMap(Airport::getCode, (Airport a) -> Optional.of(a)));
 		int resultado=0;
 		/* Obtener id de aeropuertos */
-		Optional<Airport> oDestination = serviceAirport.findByCode(destinationAirport);
-		Optional<Airport> oOrigin = serviceAirport.findByCode(originAirport);
+		Optional<Airport> oDestination = airports.get(destinationAirport);
+		Optional<Airport> oOrigin = airports.get(originAirport);
 		if (oDestination.isPresent() && oOrigin.isPresent()) {
 			Airport origin = oOrigin.get();
 			Airport destination = oDestination.get();
@@ -505,6 +476,36 @@
 			resultado=0;}
 		return resultado;
 	}
+
+
+	private Double getBestTime(Integer start, Integer objective) {
+		return null;
+	}
+
+	public void setearArrivalTakeOffUTC(FlightPlan fp){
+		int takeOffUtc =fp.getFlight().getTakeOffAirport().getCity().getCountry().getUtc();
+		int arrivalUtc =fp.getFlight().getArrivalAirport().getCity().getCountry().getUtc();
+
+		LocalTime takeOff= fp.getFlight().getTakeOffTime().toLocalTime();
+		LocalTime arrival= fp.getFlight().getArrivalTime().toLocalTime();
+
+		if(takeOffUtc>0) takeOff=takeOff.minusHours(takeOffUtc);
+		else {
+			takeOffUtc*=-1;
+			takeOff=takeOff.plusHours(takeOffUtc);
+		}
+
+		if(arrivalUtc>0) arrival=arrival.minusHours(arrivalUtc);
+		else {
+			arrivalUtc*=-1;
+			arrival=arrival.plusHours(arrivalUtc);
+		}
+
+		fp.setArrivalTimeUtc(Time.valueOf(arrival));
+		fp.setTakeOffTimeUtc(Time.valueOf(takeOff));
+
+
+	}
 	public LocalDate convertStringToLocalDate(String date) {
 		try {
 			SimpleDateFormat formatterDate = new SimpleDateFormat("yyyyMMdd");
@@ -603,7 +604,6 @@
 		}
 		return acumulator;
 	}
-
 	public double durationBetweenTime(LocalTime start, LocalTime end, Integer utcStart, Integer utcEnd) {
 		double acumulator;
 		if(utcStart>0){
@@ -625,7 +625,6 @@
 		acumulator  =durationBetweenTime( start,  end);
 		return acumulator;
 	}
-
 	public double durationBetweenTime(Boolean isStart, LocalDate date,LocalTime time,LocalTime start, LocalTime end,  FlightPlan fp)  {
 		double acumulator=0;
 		Integer dia=0;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fa94474a-5987-4463-a820-534a5ded8da5\" name=\"Changes\" comment=\"Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/dataSources/85a6ec74-1f91-40ad-8ff1-0de2bf4b797f.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/dataSources/85a6ec74-1f91-40ad-8ff1-0de2bf4b797f.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/pucp/dp1/redex/router/algorithms/AStar.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/pucp/dp1/redex/router/algorithms/AStar.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/application.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/application.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/pucp/dp1/redex/router/algorithms/AStar$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/pucp/dp1/redex/router/algorithms/AStar$1.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/pucp/dp1/redex/router/algorithms/AStar.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/pucp/dp1/redex/router/algorithms/AStar.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"Veneko &lt;john.soto@pucp.edu.pe&gt;\" />\r\n        <option value=\"PabloPerezAlbela &lt;p.perezalbela@pucp.edu.pe&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/consoles/db/85a6ec74-1f91-40ad-8ff1-0de2bf4b797f/console.sql\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/pom.xml\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/ApplicationListenerInitialize.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/RedexApplication.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/Runner.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/controller/login/UserController.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/controller/route/FlightPlanController.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/controller/route/RoutePlanController.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/controller/sales/AirportController.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/controller/sales/DispatchController.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/controller/sales/HistoricoController.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/dao/PACK/IFlight.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/dao/route/IFlightPlan.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/dao/sales/IHistorico.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/model/PACK/Flight.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/model/route/FlightPlan.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/model/route/RoutePlan.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/model/sales/Dispatch.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/model/sales/Historico.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/model/storage/Package.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/model/storage/StorageRegister.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/router/algorithms/AStar.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/router/algorithms/Node.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/services/dao/route/IFlightPlanService.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/services/dao/sales/IHistoricoService.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/services/impl/PACK/FlightService.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/services/impl/route/FlightPlanService.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/services/impl/route/RoutePlanService.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/services/impl/sales/AirportService.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/services/impl/sales/DispatchService.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/pucp/dp1/redex/services/impl/sales/HistoricoService.java\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/resources/application.properties\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/resources/import.sql\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/test/java/pucp/dp1/redex/te.java\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HT38SSj2bt6Yl29Q5WTIMKziEa\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;database.data.extractors.current.export.id&quot;: &quot;Comma-separated (CSV)_id&quot;,\r\n    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,\r\n    &quot;last_directory_selection&quot;: &quot;C:/Users/DUXAT/Desktop/redex-BackEnd/src/test/java&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/DUXAT/Desktop/redex-BackEnd/src/main/resources&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.stylelint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.stylelint&quot;: &quot;&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;835865bcf96d169a9ac7f1ca4bf02848&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;mysql&quot;\r\n    ],\r\n    &quot;RunConfigurationTargetLRU&quot;: [\r\n      &quot;85a6ec74-1f91-40ad-8ff1-0de2bf4b797f&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\DUXAT\\Desktop\\redex-BackEnd\\src\\main\\resources\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunDashboard\">\r\n    <option name=\"configurationTypes\">\r\n      <set>\r\n        <option value=\"SpringBootApplicationConfigurationType\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Spring Boot.Redex\">\r\n    <configuration name=\"Redex\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <option name=\"ACTIVE_PROFILES\" />\r\n      <module name=\"redex\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"pucp.dp1.redex.RedexApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fa94474a-5987-4463-a820-534a5ded8da5\" name=\"Changes\" comment=\"\" />\r\n      <created>1668295089302</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1668295089302</updated>\r\n      <workItem from=\"1668295092386\" duration=\"4291000\" />\r\n      <workItem from=\"1668393605372\" duration=\"1050000\" />\r\n      <workItem from=\"1668486995509\" duration=\"1869000\" />\r\n      <workItem from=\"1668721703375\" duration=\"1697000\" />\r\n      <workItem from=\"1668898677999\" duration=\"857000\" />\r\n      <workItem from=\"1668920270349\" duration=\"5754000\" />\r\n      <workItem from=\"1669179197218\" duration=\"766000\" />\r\n      <workItem from=\"1669181597409\" duration=\"73000\" />\r\n      <workItem from=\"1669181714014\" duration=\"2442000\" />\r\n      <workItem from=\"1669188176713\" duration=\"18000\" />\r\n      <workItem from=\"1669246134570\" duration=\"10396000\" />\r\n      <workItem from=\"1669436471537\" duration=\"9300000\" />\r\n      <workItem from=\"1669590907906\" duration=\"5238000\" />\r\n      <workItem from=\"1669779750769\" duration=\"167000\" />\r\n      <workItem from=\"1669779965229\" duration=\"5406000\" />\r\n      <workItem from=\"1669834385776\" duration=\"539000\" />\r\n      <workItem from=\"1669851098976\" duration=\"638000\" />\r\n      <workItem from=\"1669865985488\" duration=\"417000\" />\r\n      <workItem from=\"1669866985970\" duration=\"168000\" />\r\n      <workItem from=\"1669867213185\" duration=\"58000\" />\r\n      <workItem from=\"1669949478057\" duration=\"3022000\" />\r\n      <workItem from=\"1669953363209\" duration=\"41000\" />\r\n      <workItem from=\"1669953415247\" duration=\"30000\" />\r\n      <workItem from=\"1669953460347\" duration=\"2439000\" />\r\n      <workItem from=\"1670010077601\" duration=\"1816000\" />\r\n      <workItem from=\"1670011911479\" duration=\"999000\" />\r\n      <workItem from=\"1670016651906\" duration=\"15142000\" />\r\n      <workItem from=\"1670456229745\" duration=\"3773000\" />\r\n      <workItem from=\"1670460849207\" duration=\"22414000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Back arreglado y con los ultimos cambios\">\r\n      <created>1668304064027</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668304064027</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Back arreglado y con los ultimos cambios\">\r\n      <created>1668304091135</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668304091135</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Ultima reestructuracion con base en las listas de listas\">\r\n      <created>1668664867449</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668664867449</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Solucionado errores de compilacion\">\r\n      <created>1668722543353</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668722543362</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Solucionado errores de compilacion\">\r\n      <created>1668722565411</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668722565411</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Solucionado errores de compilacion\">\r\n      <created>1669188077868</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669188077868</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Solucionado errores de compilacion\">\r\n      <created>1669251060387</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669251060387</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"logica para el colapso y simulacion de 5 dias terminada\">\r\n      <created>1669254362875</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669254362875</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"logica para el colapso y simulacion de 5 dias terminada\">\r\n      <created>1669261009959</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669261009959</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"logica para el colapso y simulacion de 5 dias terminada\">\r\n      <created>1669261316650</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669261316650</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"logica para el colapso y simulacion de 5 dias terminada\">\r\n      <created>1669443070882</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669443070882</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"logica para el colapso y simulacion de 5 dias terminada\">\r\n      <created>1669443076360</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669443076360</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Back optimizado a la velocidad de la luz usando tecnicas venezolanas e ICPC\">\r\n      <created>1669445732371</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669445732371</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Back optimizado a la velocidad de la luz usando tecnicas venezolanas e ICPC\">\r\n      <created>1669445774640</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669445774640</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Logica de colapso implementada, falta comprobar pq aun no me se la logica completa de pablo pero intente hacer lo que me dijo xdxd\">\r\n      <created>1669499684106</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669499684106</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Logica de colapso implementada, falta comprobar pq aun no me se la logica completa de pablo pero intente hacer lo que me dijo xdxd\">\r\n      <created>1669595364933</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669595364933</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Logica de colapso implementada, falta comprobar pq aun no me se la logica completa de pablo pero intente hacer lo que me dijo xdxd\">\r\n      <created>1669596891508</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669596891508</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Logica de colapso implementada, falta comprobar pq aun no me se la logica completa de pablo pero intente hacer lo que me dijo xdxd\">\r\n      <created>1669603831932</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669603831932</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Logica de colapso implementada, falta comprobar pq aun no me se la logica completa de pablo pero intente hacer lo que me dijo xdxd\">\r\n      <created>1669782378969</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669782378969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Imports arreglados y anadidos &#10;&#10;Columna redundante nro_vuelo eliminada &#10;&#10;Carga masiva 2M datos agregada al startup de la aplicaion &#10;&#10;Colocados controladores del ciclo de inicio de la aplciacion&#10;&#10;IHistoricoService terminado&#10;&#10;HistoricoService terminado&#10;&#10;IHistorico terminado&#10;&#10;HistoricoController terminado&#10;&#10;Logica de api para filtrar historico por fechas &#10;&#10;Logica de api para filtrar historico por fechas y codigo de pais salida &#10;&#10;Culminada la logica de prueba con los datos de 1 txt extraidos desde la base de datos para &#10;&#10;la ejecucion dia a dia &#10;la ejecucion de 5 dias &#10;la ejecucion hasta colapso\">\r\n      <created>1670027209207</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670027209207</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Aparentemente solucionado\">\r\n      <created>1670029238020</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670029238020</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Aparentemente solucionado\">\r\n      <created>1670032742949</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670032742949</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Aparentemente solucionado\">\r\n      <created>1670033315754</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670033315754</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Aparentemente solucionado\">\r\n      <created>1670039433138</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670039433138</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Aparentemente solucionado\">\r\n      <created>1670039564278</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670039564278</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Imports terminados ahora si\">\r\n      <created>1670041831214</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670041831214</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"Back arreglado\">\r\n      <created>1670111209359</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670111209360</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Back arreglado\">\r\n      <created>1670111577754</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670111577754</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Querys arregaldas &#10;&#10;Back solucionado&#10;&#10;Clases e interfaces:&#10;&#10;FlightPlanController&#10;FlightPlanService&#10;IFlightPlan&#10;IFlightPlanService&#10;FlightPlan &#10;Solucionadas e implementadas&#10;&#10;Imports recuperados\">\r\n      <created>1670113159049</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670113159049</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Errores solucionados, clases &quot;Services&quot; reparadas, clases &quot;Controllers&quot; terminadas y probadas, &quot;APIs&quot; terminadas y probadas\">\r\n      <created>1670115990401</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670115990401</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Cola anadida&#10;&#10;Imports corregidos\">\r\n      <created>1670386169147</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670386169147</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"Cola anadida&#10;&#10;Imports corregidos\">\r\n      <created>1670386270318</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670386270318</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"Cola anadida&#10;&#10;Imports corregidos\">\r\n      <created>1670388582213</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670388582213</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"Cola anadida&#10;&#10;Imports corregidos\">\r\n      <created>1670390415581</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670390415581</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"Cola anadida&#10;&#10;Imports corregidos\">\r\n      <created>1670393903739</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670393903739</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"diccionario implementado\">\r\n      <created>1670459975252</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670459975252</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"codigo comentado\">\r\n      <created>1670474443757</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670474443757</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos\">\r\n      <created>1670474595609</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670474595609</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos\">\r\n      <created>1670474700366</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670474700366</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos\">\r\n      <created>1670474801118</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670474801118</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos\">\r\n      <created>1670475481321</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670475481321</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos\">\r\n      <created>1670475564927</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1670475564927</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"43\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"COLUMN_ID_WIDTH\">\r\n                <map>\r\n                  <entry key=\"Table.Default.Author.ColumnIdWidth\" value=\"123\" />\r\n                  <entry key=\"Table.Default.Date.ColumnIdWidth\" value=\"135\" />\r\n                  <entry key=\"Table.Default.Hash.ColumnIdWidth\" value=\"125\" />\r\n                  <entry key=\"Table.Git.CommitSignature.ColumnIdWidth\" value=\"125\" />\r\n                  <entry key=\"Table.Space.CommitStatus.ColumnIdWidth\" value=\"124\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\r\n    <option name=\"CHECK_NEW_TODO\" value=\"false\" />\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Back arreglado y con los ultimos cambios\" />\r\n    <MESSAGE value=\"Ultima reestructuracion con base en las listas de listas\" />\r\n    <MESSAGE value=\"Solucionado errores de compilacion\" />\r\n    <MESSAGE value=\"logica para el colapso y simulacion de 5 dias terminada\" />\r\n    <MESSAGE value=\"Back optimizado a la velocidad de la luz usando tecnicas venezolanas e ICPC\" />\r\n    <MESSAGE value=\"Logica de colapso implementada, falta comprobar pq aun no me se la logica completa de pablo pero intente hacer lo que me dijo xdxd\" />\r\n    <MESSAGE value=\"Imports arreglados y anadidos &#10;&#10;Columna redundante nro_vuelo eliminada &#10;&#10;Carga masiva 2M datos agregada al startup de la aplicaion &#10;&#10;Colocados controladores del ciclo de inicio de la aplciacion&#10;&#10;IHistoricoService terminado&#10;&#10;HistoricoService terminado&#10;&#10;IHistorico terminado&#10;&#10;HistoricoController terminado&#10;&#10;Logica de api para filtrar historico por fechas &#10;&#10;Logica de api para filtrar historico por fechas y codigo de pais salida &#10;&#10;Culminada la logica de prueba con los datos de 1 txt extraidos desde la base de datos para &#10;&#10;la ejecucion dia a dia &#10;la ejecucion de 5 dias &#10;la ejecucion hasta colapso\" />\r\n    <MESSAGE value=\"Aparentemente solucionado\" />\r\n    <MESSAGE value=\"Imports terminados\" />\r\n    <MESSAGE value=\"Imports terminados ahora si\" />\r\n    <MESSAGE value=\"Back arreglado\" />\r\n    <MESSAGE value=\"Querys arregaldas &#10;&#10;Back solucionado&#10;&#10;Clases e interfaces:&#10;&#10;FlightPlanController&#10;FlightPlanService&#10;IFlightPlan&#10;IFlightPlanService&#10;FlightPlan &#10;Solucionadas e implementadas&#10;&#10;Imports recuperados\" />\r\n    <MESSAGE value=\"Errores solucionados, clases &quot;Services&quot; reparadas, clases &quot;Controllers&quot; terminadas y probadas, &quot;APIs&quot; terminadas y probadas\" />\r\n    <MESSAGE value=\"Cola anadida&#10;&#10;Imports corregidos\" />\r\n    <MESSAGE value=\"diccionario implementado\" />\r\n    <MESSAGE value=\"codigo comentado\" />\r\n    <MESSAGE value=\"Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <watches-manager>\r\n      <configuration name=\"SpringBootApplicationConfigurationType\">\r\n        <watch expression=\"request\" />\r\n        <watch expression=\"daoHistorico\" />\r\n        <watch expression=\"historicos\" />\r\n        <watch expression=\"currentNode\" />\r\n        <watch expression=\"fp\" />\r\n        <watch expression=\"fpResult\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a12a5d2deb70062fe7edf6f0babea99edded232e)
+++ b/.idea/workspace.xml	(date 1670556263092)
@@ -5,10 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="fa94474a-5987-4463-a820-534a5ded8da5" name="Changes" comment="Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos">
-      <change beforePath="$PROJECT_DIR$/.idea/dataSources/85a6ec74-1f91-40ad-8ff1-0de2bf4b797f.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/85a6ec74-1f91-40ad-8ff1-0de2bf4b797f.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/pucp/dp1/redex/router/algorithms/AStar.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/pucp/dp1/redex/router/algorithms/AStar.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/application.properties" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/pucp/dp1/redex/router/algorithms/AStar$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/pucp/dp1/redex/router/algorithms/AStar$1.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/pucp/dp1/redex/router/algorithms/AStar.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/pucp/dp1/redex/router/algorithms/AStar.class" afterDir="false" />
     </list>
@@ -188,6 +186,8 @@
       <workItem from="1670016651906" duration="15142000" />
       <workItem from="1670456229745" duration="3773000" />
       <workItem from="1670460849207" duration="22414000" />
+      <workItem from="1670484225045" duration="22000" />
+      <workItem from="1670553379663" duration="2570000" />
     </task>
     <task id="LOCAL-00001" summary="Back arreglado y con los ultimos cambios">
       <created>1668304064027</created>
@@ -483,7 +483,14 @@
       <option name="project" value="LOCAL" />
       <updated>1670475564927</updated>
     </task>
-    <option name="localTasksCounter" value="43" />
+    <task id="LOCAL-00043" summary="Funciones optimizadas, logica optimizada, bucles reemplazados con funciones builtIn, codigo innecesario comentado,30 imports corregidos">
+      <created>1670484237330</created>
+      <option name="number" value="00043" />
+      <option name="presentableId" value="LOCAL-00043" />
+      <option name="project" value="LOCAL" />
+      <updated>1670484237330</updated>
+    </task>
+    <option name="localTasksCounter" value="44" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -495,13 +502,14 @@
         <entry key="MAIN">
           <value>
             <State>
+              <option name="LONG_EDGES_VISIBLE" value="true" />
               <option name="COLUMN_ID_WIDTH">
                 <map>
-                  <entry key="Table.Default.Author.ColumnIdWidth" value="123" />
-                  <entry key="Table.Default.Date.ColumnIdWidth" value="135" />
-                  <entry key="Table.Default.Hash.ColumnIdWidth" value="125" />
-                  <entry key="Table.Git.CommitSignature.ColumnIdWidth" value="125" />
-                  <entry key="Table.Space.CommitStatus.ColumnIdWidth" value="124" />
+                  <entry key="Table.Default.Author.ColumnIdWidth" value="130" />
+                  <entry key="Table.Default.Date.ColumnIdWidth" value="157" />
+                  <entry key="Table.Default.Hash.ColumnIdWidth" value="90" />
+                  <entry key="Table.Git.CommitSignature.ColumnIdWidth" value="91" />
+                  <entry key="Table.Space.CommitStatus.ColumnIdWidth" value="15" />
                 </map>
               </option>
             </State>
